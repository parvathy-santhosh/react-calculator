{"version":3,"sources":["Button.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickHandler","bind","assertThisInitialized","e","pass","target","id","react_default","a","createElement","btn","onClick","className","Component","flag","numArray","index","text","Calculator","state","b","typedDec","action","passNum","decimal","equals","clear","handleKeyPress","x","display","setState","oldVal","toString","concat","parseFloat","result","parseInt","key","document","addEventListener","_this2","map","item","src_Button","App","src_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a475fd43.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n  clickHandler(e){\r\n    this.props.pass(e.target.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id={this.props.btn} onClick={this.clickHandler} className={\"button\" + \" \" + this.props.className}>\r\n        {this.props.btn}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, {Component} from 'react';\r\nimport Button from './Button.js';\r\n\r\nlet flag = 0;\r\nlet numArray = [\r\n  {\r\n    index: 1,\r\n    text: \"one\"\r\n  },\r\n  {\r\n    index: 2,\r\n    text: \"two\"\r\n  },\r\n  {\r\n    index: 3,\r\n    text: \"three\"\r\n  },\r\n  {\r\n    index: 4,\r\n    text: \"four\"\r\n  },\r\n  {\r\n    index: 5,\r\n    text: \"five\"\r\n  },\r\n  {\r\n    index: 6,\r\n    text: \"six\"\r\n  },\r\n  {\r\n    index: 7,\r\n    text: \"seven\"\r\n  },\r\n  {\r\n    index: 8,\r\n    text: \"eight\"\r\n  },\r\n  {\r\n    index: 9,\r\n    text: \"nine\"\r\n  }\r\n]\r\n\r\nclass Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      a: 0,\r\n      b: 0,\r\n      typedDec : false,\r\n      action: 0\r\n    }\r\n    this.passNum = this.passNum.bind(this);\r\n    this.decimal = this.decimal.bind(this);\r\n    this.action = this.action.bind(this);\r\n    this.equals = this.equals.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n  }\r\n\r\n  display(x) {\r\n    this.props.display(x);\r\n    flag = 0;\r\n  }\r\n\r\n  clear(x) {\r\n    this.setState({\r\n        a: 0,\r\n        b: 0,\r\n        typedDec : false,\r\n        action: 0\r\n    });\r\n    this.display(0);\r\n  }\r\n\r\n  passNum(x) {\r\n    let oldVal = this.state.b;\r\n    if (oldVal !== 0){\r\n      this.setState({\r\n        b: oldVal.toString().concat(x.toString()),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        b: x\r\n      });\r\n    }\r\n    flag = 1;\r\n  }\r\n\r\n  decimal(x) {\r\n    if (this.state.typedDec) {\r\n      // pass\r\n    } else {\r\n      this.passNum('.');\r\n      this.setState({\r\n        typedDec: true\r\n      })\r\n    }\r\n  }\r\n\r\n  action(x) {\r\n    if (this.state.a === 0) {\r\n      this.setState({\r\n        a: parseFloat(this.state.b),\r\n        b: 0,\r\n        typedDec: false,\r\n        action: x\r\n      });\r\n    } else {\r\n      this.setState({\r\n        action: x\r\n      });\r\n    }\r\n  }\r\n\r\n  equals(x) {\r\n    let a = parseFloat(this.state.a);\r\n    let b = parseFloat(this.state.b);\r\n    if (this.state.action) {\r\n      let result = 0;\r\n      switch (this.state.action) {\r\n        case('+'):\r\n          result = a + b;\r\n          break;\r\n        case('-'):\r\n          result = a - b;\r\n          break;\r\n        case('x'):\r\n          result = a * b;\r\n          break;\r\n        case('/'):\r\n          result = a/b;\r\n          break;\r\n        default:\r\n          //pass\r\n          break;\r\n      }\r\n      this.setState({\r\n        a: 0,\r\n        b: result,\r\n        action: 0\r\n      });\r\n      if (parseInt(result) === (parseFloat(result))) {\r\n        this.setState({ typedDec : false });\r\n      } else {\r\n        this.setState({ typedDec : true });\r\n      }\r\n      this.display(result);\r\n    } else {\r\n      //pass\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if ((e.key < 10) & (e.key > -1)) {\r\n      this.passNum(e.key);\r\n      this.display(this.state.b);\r\n    }\r\n    if (e.key === 'Enter') {\r\n      this.equals(e.key);\r\n    }\r\n    if (e.key === '.') {\r\n      this.decimal(e.key);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (flag !== 0){\r\n      this.display(this.state.b);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"calculator\">\r\n        <div id=\"num\">\r\n          {numArray.map((item) => {\r\n            return <Button className=\"numbers\" id={item.text} btn={item.index} pass={this.passNum} />\r\n          })}\r\n        </div>\r\n        <div id=\"row2\">\r\n          <Button className=\"secondary\" id=\"clear\" btn=\"C\" pass={this.clear} />\r\n          <Button className=\"secondary\" btn=\"=\" pass={this.equals} />\r\n          <Button className=\"primary\" id=\"add\" btn=\"+\" pass={this.action} />\r\n          <Button className=\"primary\" id=\"subtract\" btn=\"-\" pass={this.action} />\r\n          <Button className=\"primary\" id=\"multiply\" btn=\"x\" pass={this.action} />\r\n          <Button className=\"primary\" id=\"divide\" btn=\"/\" pass={this.action} />\r\n          <Button className=\"numbers\" id=\"zero\" btn=\"0\" pass={this.passNum} />\r\n          <Button className=\"numbers\" id=\"decimal\" btn=\".\" pass={this.decimal} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Calculator from './Calculator.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: 0\n    }\n    this.display = this.display.bind(this);\n  }\n  display(x) {\n    this.setState({\n      display: x\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> CALCULATOR </h1>\n          <hr className=\"hr\" />\n          <div id=\"display\">{this.state.display}</div>\n          <Calculator display={this.display} />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}